# ------------------------------------------------------------------------------
# Proximus EBU Kiosk - Docker Template v1.0
#
# 03/06/2017 - Vincent Dupont (vidupont@gmail.com)
#
# The Kiosk User Interface is based on Python / Kivy
# NodeJs & ElectronJS also available for further usage
# PlatformIO is needed for remote arduino firmware updates
#
# Base Image :
#  - resin/%%RESIN_MACHINE_NAME%%-node:6 : NodeJs Image with Python
#
# Dependencies:
# - omxplayer : read local videos
# - platformio : for arduino remote updates / firmware load (remote agent)
#
# GitHub:
#
# - https://github.com/vidupont/ebu-kiosk-v1 : the main repository
# - https://github.com/vidupont/ebu-kiosk-arduino-v1 : arduino sketch
# - https://github.com/vidupont/ebu-medias : media files to be cached
#
# Info: Resin Base Images : https://docs.resin.io/runtime/resin-base-images/
# ------------------------------------------------------------------------------

# Base Image from Resin repository
FROM resin/%%RESIN_MACHINE_NAME%%-node:6


# Install some dependencies
RUN apt-get update && apt-get install -y \
  apt-utils \
  clang \
  python-pip \

# Install Xorg Packages
  xserver-xorg-core \
  xserver-xorg-input-all \
  xserver-xorg-video-fbdev \
  xorg \
  fbset \

# Install libraries Packages
  libdbus-1-dev \
  libgtk2.0-dev \
  libnotify-dev \
  libgnome-keyring-dev \
  libgconf2-dev \
  libasound2-dev \
  libcap-dev \
  libcups2-dev \
  libxtst-dev \
  libxss1 \
  libnss3-dev \
  libsmbclient \
  libssh-4 \
  libexpat-dev \

# Fluxbox windows manager
  fluxbox \

# Install OMXPlayer
  omxplayer

# Does some cleaning here
RUN rm -rf /var/lib/apt/lists/*

# Setup Xorg & Fluxbox preferences
RUN mkdir ~/.fluxbox
RUN echo "xset s off" > ~/.fluxbox/startup && echo "xserver-command=X -s 0 dpms" >> ~/.fluxbox/startup
RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc


# Install PlatformIO (Arduino Remote Agent)
#pip install -U platformio

# Change Workdir
WORKDIR /usr/src/app/electronjs

# Copy all other files into the app directory
COPY ./app/package.json ./

# Install npm modules for the application
 RUN JOBS=MAX npm install --unsafe-perm --production \
&& npm cache clean && node_modules/.bin/electron-rebuild


# Change Workdir
WORKDIR /usr/src/app

# Copy additional folders
COPY ./app ./
COPY ./startup /STARTUP
COPY ./arduino /ARDUINO

# Perform last upgrade before running
RUN apt-get upgrade

# Enable Systemd
ENV INITSYSTEM on

# PlatformIO Authentication & start Agent
# RUN pio remote agent start -d /data &


# Proximus Logo Animation
CMD ["bash", "/STARTUP/proximus_logo.sh"]

# RUN the Main Application
CMD ["bash", "/usr/src/app/electronjs/start.sh"]
